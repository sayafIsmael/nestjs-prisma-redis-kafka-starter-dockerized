version: '3.8'
services:
  app:
    build: .
    ports:
      - "3000:3000"
    env_file: ".env"
    depends_on:
      - postgres
      - redis
      - kafka
      - elasticsearch
    networks:
      - app-network

  postgres:
    image: postgres:15
    container_name: postgres
    env_file: ".env"
    ports:
      - "5432:5432"
    volumes:
      - ./init-scripts/db:/docker-entrypoint-initdb.d
      - ./data:/var/lib/postgresql/data
    networks:
      - app-network

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - app-network

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    env_file: ".env"
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    networks:
      - app-network

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    env_file: ".env"
    ports:
      - "2181:2181"
    networks:
      - app-network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.10.0
    container_name: elasticsearch
    env_file: ".env"
    environment:
      - discovery.type=single-node
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - app-network

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml  
    ports:
      - "9090:9090"  
    networks:
      - app-network

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3001:3000"
    networks:
      - app-network

volumes:
  postgres-data:

networks:
  app-network:
    driver: bridge
